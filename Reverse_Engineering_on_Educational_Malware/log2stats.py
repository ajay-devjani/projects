# Details:
# Written by: Ajay Devjani, M.Tech INSE
# Project Co-partner: Rushaan Qureshi, M.Tech INSE
# Supervised by Prof: Makan Pourzandi

# Importing the libraries
import logging
import os
import pandas as pd


# Function definition to create TXT of API Calls of each exe from logs generated by IDA Free.
# Output: "training_<<n-gram size>>_gram.txt" in "training" folder.
def log2stats():
    cwd = os.getcwd()
    i_path = os.path.join(cwd, "inputs/malwares")
    o_path = os.path.join(cwd, "outputs")
    # Iterate all files in IDA Malwares directory.
    for filename in os.listdir(i_path):
        data_frame = pd.read_csv(os.path.join(i_path, filename)).dropna()
        # Sort values according to From and Address in order to get the sequence of API calls.
        data_frame.sort_values(["From", "Address"], axis=0, ascending=True, inplace=True, na_position='first')
        fro = "0"
        # Generate TXT files in "outputs" folder, consists of all API calls of a specific exe.
        try:
            with open(os.path.join(o_path, filename.split(".")[0] + "_seq.txt"), "w+", encoding="utf-8") as fp:
                for index, row in data_frame.iterrows():
                    row_to = row["To"]
                    if fro != row["From"]:
                        fro = row["From"]
                        fp.write("1\n" + row["From"] + "|" + row_to)
                    elif fro == row["From"]:
                        fp.write("|" + row_to)
                    else:
                        print("Some Error in Sequence Stats.")
                        break
            fp.close()
            print("Writing of " + filename.split(".")[0] + "_seq.txt successful.\n")
            logging.info("Writing of " + filename.split(".")[0] + "_seq.txt successful.\n")
        except Exception as e:
            print("Error in writing file: " + filename.split(".")[0] + "_seq.txt ")
            logging.error("Error in writing file: " + filename.split(".")[0] + "_seq.txt ")
            print(str(e))

    i_path = os.path.join(cwd, "inputs/benign")
    # Iterate all files in IDA Benign directory.
    for filename in os.listdir(i_path):
        data_frame = pd.read_csv(os.path.join(i_path, filename)).dropna()
        # Sort values according to From and Address in order to get the sequence of API calls.
        data_frame.sort_values(["From", "Address"], axis=0, ascending=True, inplace=True, na_position='first')
        fro = "0"
        # Generate TXT files in "outputs" folder, consists of all API calls of a specific exe.
        try:
            with open(os.path.join(o_path, filename.split(".")[0] + "_seq.txt"), "w+", encoding="utf-8") as fp:
                for index, row in data_frame.iterrows():
                    row_to = row["To"]
                    if fro != row["From"]:
                        fro = row["From"]
                        fp.write("0\n" + row["From"] + "|" + row_to)
                    elif fro == row["From"]:
                        fp.write("|" + row_to)
                    else:
                        print("Some Error in Sequence Stats.")
                        break
            fp.close()
            print("Writing of " + filename.split(".")[0] + "_seq.txt successful.\n")
            logging.info("Writing of " + filename.split(".")[0] + "_seq.txt successful.\n")
        except Exception as e:
            print("Error in writing file: " + filename.split(".")[0] + "_seq.txt ")
            logging.error("Error in writing file: " + filename.split(".")[0] + "_seq.txt ")
            print(str(e))
